name: Create and publish a Docker image

on:
  push
  # push:
  #   branches:
  #     - "main"
env:
  TZ: Asia/Tokyo
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/receiver

jobs:
  test:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.x

      - name: Test
        run: |
          cd receiver
          go test ./...

  build-and-push-image:
    runs-on: ubuntu-20.04
    needs: test
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          image: tonistiigi/binfmt@sha256:85683def11494bc0055d98dd1081e73cb5e70bbc1ae532be3d12cf054e2b11f1
          platforms: linux/amd64, linux/arm64

      - name: Set up docker
        uses: docker/setup-buildx-action@v1

      - uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build multi architecture images
        uses: docker/build-push-action@v2
        with:
          context: ./receiver
          platforms: linux/amd64, linux/arm64
          build-args: TZ=${{ env.TZ }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
